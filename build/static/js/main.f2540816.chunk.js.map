{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.f2540816.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false, \r\n    userId: null,\r\n    token:null,\r\n    login: () => {}, \r\n    logout: () => {} \r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  \r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n    return { token, login, logout, userId };\r\n}","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\nconst MainHeader = props => {\r\n    return <header className=\"main-header\">\r\n        {props.children}\r\n    </header>;\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n    return <ul className=\"nav-links\">\r\n        <li>\r\n            <NavLink to=\"/\" exact>All Users</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/places/new\">Add Place</NavLink>\r\n            </li>\r\n        )}\r\n         {!auth.isLoggedIn && (\r\n        <li>\r\n            <NavLink to=\"/auth\">Authenticate</NavLink>\r\n        </li>\r\n         )}\r\n         {auth.isLoggedIn && (\r\n         <li>\r\n             <button onClick={auth.logout}>Logout</button>\r\n         </li>\r\n         )}\r\n    </ul>\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    const content = (\r\n    <CSSTransition \r\n        in={props.show} \r\n        timeout={200} \r\n        classNames=\"slide-in-left\" \r\n        mountOnEnter \r\n        unmountOnExit\r\n    >\r\n        <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'; \r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    };\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    };\r\n\r\n    return ( \r\n      <React.Fragment>\r\n          {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n            <nav className=\"main-navigation__drawer-nav\">\r\n            <NavLinks />\r\n            </nav>\r\n        </SideDrawer>\r\n      \r\n        <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n            <span/>\r\n            <span/>\r\n            <span/>\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n            <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n            <NavLinks />\r\n        </nav>\r\n        </MainHeader>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;","import React, { Suspense } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\n//import Users from './user/pages/Users';\r\n//import NewPlace from './places/pages/NewPlace';\r\n//import UserPlaces from './places/pages/UserPlaces';\r\n//import UpdatePlace from './places/pages/UpdatePlace';\r\n//import Auth from './user/pages/Auth';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\r\n\r\nconst Users = React.lazy(() => import('./user/pages/Users'));\r\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\r\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\r\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\r\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense \r\n          fallback={\r\n          <div className=\"center\">\r\n            <LoadingSpinner />\r\n          </div>}>{routes}\r\n          </Suspense>\r\n          </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}